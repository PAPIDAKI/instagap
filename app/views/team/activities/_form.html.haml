= form_for([:team,@registration,@activity]) do |f|
  - if @activity.errors.any?
    #error_explanation
      %h2
        = pluralize(@activity.errors.count, "error")
        prohibited this activity from being saved:
      %ul
        - @activity.errors.full_messages.each do |message|
          %li= message

  - if @activity.type=='Protection'
    .form-group
      = f.collection_check_boxes(:production_ids,@registration.productions.order(:mcrop_id).includes(:mcrop,:pmu),:id,:pmu_with_produce_and_variety) do |b|
        = b.check_box :checked=>false
        = b.label
        %br
    %br
  


  .form-group
  = f.label :date
  %br/
  = f.date_select :date,class:'form-control'
  %hr/

  - if @activity.type=='Protection'
    %h4 Solutions
    #solutions
      = f.fields_for :solutions  do |solution|
        .fieldset
        .field
        #name
          = solution.label :name
          -# = solution.text_field :name,id:'tagi',data:{autocomplete_source:Mfc.where(mcrop_id:1140300).order(:gbonoma).map(&:gbonoma)}
          =solution.collection_select(:mfc_id,Mfc.where(mcrop_id:1140300).order(:gbonoma),:id,:gbonoma)

          .field

          %br
          = solution.label :phi
          = solution.text_field :phi
          .field
          %br
          = solution.label :quantity
          = solution.text_field :quantity
          %br
            =solution.hidden_field :_destroy
            =link_to "Delete",'#' ,class:'remove_fields'
        -#     -# = render 'solution_fields', :f=>solution
  = link_to_add_fields 'add Solution', f, :solutions


  .form-group
    = f.hidden_field :type,class:'form-control'
  .form-group
    = f.label :note
    %br/
    = f.text_area :note,class:'form-control'
  .form-group
    = f.label :operator
    %br/
    = f.text_field :operator,class:'form-control'
  .form-group
    = f.label :persons
    %br/
    = f.number_field :persons,class:'form-control'
  .form-group
    = f.label :approved_by
    %br/
    = f.text_field :approved_by,class:'form-control'

 
  .actions
    = f.submit